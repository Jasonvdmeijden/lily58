
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  / {
    keymap {
      compatible = "zmk,keymap";
  layer0 {
          bindings = <
          &kp ESCAPE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp GRAVE &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp MINUS &kp LEFT_CONTROL &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE &kp LEFT_SHIFT &kp Z &kp X &kp C &kp V &kp B [[KC_LCBR]] [[KC_RCBR]] &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp ENTER &kp LEFT_ALT &mo 1 &kp LEFT_GUI &kp SPACE &kp SPACE &kp BACKSPACE &mo 2 &kp DELETE
          >;
        };layer1 {
          bindings = <
          &kp ESCAPE [[KC_EXLM]] [[KC_AT]] [[KC_HASH]] [[KC_DLR]] [[KC_PERC]] [[KC_CIRC]] [[KC_AMPR]] [[KC_ASTR]] [[KC_LPRN]] [[KC_RPRN]] [[KC_TILD]] &trans &mo 4 &kp HOME &kp UP &kp END &none [[KC_PLUS]] &kp HOME &kp UP &kp END &none [[KC_UNDS]] &trans &kp LA(A) &kp LEFT &kp DOWN &kp RIGHT &none &kp KP_EQUAL &kp LEFT &kp DOWN &kp RIGHT [[KC_COLN]] [[KC_DQUO]] &trans &kp LA(Z) &kp LA(X) &kp LA(C) &kp LA(V) &kp PRINTSCREEN [[KC_LPRN]] [[KC_RPRN]] &kp PRINTSCREEN &none &kp COMMA &kp DOT &kp BACKSLASH &trans &trans &none &trans &trans &trans &trans &mo 3 &trans
          >;
        };layer2 {
          bindings = <
          &trans [[KC_EXLM]] [[KC_AT]] [[KC_HASH]] [[KC_DLR]] [[KC_PERC]] [[KC_CIRC]] [[KC_AMPR]] [[KC_ASTR]] [[KC_LPRN]] [[KC_RPRN]] [[KC_TILD]] &trans &mo 4 &kp HOME &kp UP &kp END [[KC_PLUS]] &none &kp HOME &kp UP &kp END &mo 4 [[KC_UNDS]] &trans &kp LA(A) &kp LEFT &kp DOWN &kp RIGHT &kp KP_EQUAL &none &kp LEFT &kp DOWN &kp RIGHT [[KC_COLN]] [[KC_DQUO]] &trans &kp LA(Z) &kp LA(X) &kp LA(C) &kp LA(V) &kp KP_N0 [[KC_LPRN]] [[KC_RPRN]] &kp PRINTSCREEN &none [[KC_LT]] [[KC_GT]] &kp BACKSLASH &trans &trans &mo 3 &trans &trans &trans &trans &none &trans
          >;
        };layer3 {
          bindings = <
          &none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &none &sys_reset &none &none &none &none &none &none &none &none &sys_reset &kp F12 &none &none &kp LA(SPACE) [[RSFT(KC_ENT)]] &kp RC(RS(TAB)) &kp LA(F) &kp LA(F) &kp LC(TAB) [[RSFT(KC_ENT)]] &kp LA(SPACE) &none &none &none &none &none &none &none &none &kp LEFT_BRACKET &kp RIGHT_BRACKET &none &none &none &none &none &none &trans &trans &trans &trans &trans &trans &trans &trans
          >;
        };layer4 {
          bindings = <
          &none &none &none &none &none &none &none &none &none &none &none &tog 8 &none &trans &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &sys_reset &sys_reset &none &none &none &none &none &none &none &none &none &none &none &none &none &none
          >;
        };layer5 {
          bindings = <
          
          >;
        };layer6 {
          bindings = <
          
          >;
        };layer7 {
          bindings = <
          
          >;
        };layer8 {
          bindings = <
          &none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &tog 8 &none &none &kp Q &kp W &kp E &kp R &none &none &none &none &none &none &none &none &kp A &kp S &kp D &none &none &none &none &none &none &none &kp G &kp Z &kp X &kp C &kp V &kp B &none &none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp V &kp LEFT_CONTROL &kp LEFT_SHIFT &kp SPACE &kp DELETE &kp RIGHT_ALT &kp RIGHT_GUI &kp RIGHT_CONTROL
          >;
        };layer9 {
          bindings = <
          &none &none &none &none &none &none &none &none &none &none &none &trans &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none
          >;
        };
    };
  };
  
