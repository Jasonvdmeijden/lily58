/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        holdtapmod: holdtapmod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <30>;
        };

        tapqoutes: tapqoutes {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPQOUTES";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>, <&kp GRAVE>;
        };

        tapholdbt: tapholdbt {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLDBT";
            bindings = <&bt>, <&bt>;

            #binding-cells = <2>;
            tapping-term-ms = <30>;
        };

        layertap: layertap {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERTAP";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 1>, <&to 2>;
        };

        holdlayertapkp: holdlayertapkp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDLAYERTAPKP";
            bindings = <&kp>, <&layertap>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        tapbracket: tapbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPBRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        tapbrace: tapbrace {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPBRACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        tapparenthesis: tapparenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPPARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        tapgreaterthan: tapgreaterthan {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPGREATERTHAN";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;
        };

        tapslash: tapslash {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPSLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };

        tappaste: tappaste {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPPASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>, <&kp LG(V)>;
        };

        tapend: tapend {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPEND";
            #binding-cells = <0>;
            bindings = <&kp LC(END)>, <&kp LG(K_BACK)>;
        };

        taphome: taphome {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPHOME";
            #binding-cells = <0>;
            bindings = <&kp LC(HOME)>, <&kp LG(HOME)>;
        };

        tapcolon: tapcolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPCOLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp COLON>, <&kp EQUAL>;
        };

        tapunderscore: tapunderscore {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPUNDERSCORE";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;
        };

        tapquestion: tapquestion {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPQUESTION";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>;
        };

        taplessthan: taplessthan {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPLESSTHAN";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LESS_THAN>;
        };

        tapleftbracket: tapleftbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPLEFTBRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;
        };

        taprightbracket: taprightbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPRIGHTBRACKET";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;
        };

        tapwin: tapwin {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPWIN";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN>, <&kp ESCAPE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6                                         &kp N7  &kp N8   &kp N9        &kp N0   &kp MINUS  &kp EQUAL
&kp TAB           &kp Q         &kp W         &kp E         &kp R          &kp T                                                &kp Y   &kp U    &kp I         &kp O    &kp P      &kp BACKSLASH
&kp ESCAPE        &kp A         &kp S         &kp D         &kp F          &kp G                                                &kp H   &kp J    &kp K         &kp L    &tapcolon  &tapqoutes
&kp LEFT_CONTROL  &kp Z         &kp X         &kp C         &kp V          &kp B           &tapleftbracket    &taprightbracket  &kp N   &kp M    &kp COMMA     &kp DOT  &kp SLASH  &kp ENTER
                                              &kp LALT      &kp BACKSPACE  &kp LEFT_SHIFT  &kp SPACE          &kp SPACE         &mo 1   &kp DEL  &kp LEFT_WIN
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4        &kp F5     &kp F6                           &kp F7  &kp F8    &kp F9        &kp F10    &kp F11  &kp F12
&trans  &none   &none         &none         &none      &none                            &none   &kp HOME  &kp UP_ARROW  &kp END    &none    &none
&trans  &none   &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &none                            &none   &kp LEFT  &kp DOWN      &kp RIGHT  &none    &none
&trans  &none   &none         &none         &none      &none   &kp LG(LS(S))    &mo 2   &none   &none     &none         &none      &none    &trans
                              &trans        &trans     &trans  &trans           &trans  &trans  &trans    &trans
            >;
        };

        layer_2 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG                  &none  &none  &none  &none  &soft_off  &ext_power EP_ON
&none       &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none      &none
&none       &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none      &none
&none       &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none      &none
                                        &none         &trans        &none         &none    &none  &none  &none  &none
            >;
        };
    };
};
